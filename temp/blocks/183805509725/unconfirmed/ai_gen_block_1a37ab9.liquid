{% doc %}
  @prompt
    a slideshow with a fade in effect that switchde each picture 
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-slideshow-container-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    height: {{ block.settings.slideshow_height }}px;
    overflow: hidden;
    border-radius: {{ block.settings.border_radius }}px;
  }

  .ai-slideshow-slide-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity {{ block.settings.fade_duration }}s ease-in-out;
  }

  .ai-slideshow-slide-{{ ai_gen_id }}.active {
    opacity: 1;
  }

  .ai-slideshow-slide-{{ ai_gen_id }} img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
  }

  .ai-slideshow-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .ai-slideshow-placeholder-{{ ai_gen_id }} svg {
    width: 100%;
    height: 100%;
    max-width: 300px;
    max-height: 300px;
    opacity: 0.3;
  }

  .ai-slideshow-empty-state-{{ ai_gen_id }} {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    padding: 12px 20px;
    background-color: rgba(255, 255, 255, 0.9);
    border-radius: 8px;
    font-size: 14px;
    color: #666;
    text-align: center;
    pointer-events: none;
  }

  .ai-slideshow-controls-{{ ai_gen_id }} {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 8px;
    z-index: 2;
  }

  .ai-slideshow-dot-{{ ai_gen_id }} {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.5);
    border: none;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .ai-slideshow-dot-{{ ai_gen_id }}.active {
    background-color: {{ block.settings.dot_active_color }};
  }

  .ai-slideshow-dot-{{ ai_gen_id }}:hover {
    background-color: rgba(255, 255, 255, 0.8);
  }

  .ai-slideshow-nav-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background-color: rgba(0, 0, 0, 0.5);
    color: white;
    border: none;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.3s ease;
    z-index: 2;
  }

  .ai-slideshow-nav-{{ ai_gen_id }}:hover {
    background-color: rgba(0, 0, 0, 0.7);
  }

  .ai-slideshow-nav-prev-{{ ai_gen_id }} {
    left: 20px;
  }

  .ai-slideshow-nav-next-{{ ai_gen_id }} {
    right: 20px;
  }

  .ai-slideshow-nav-{{ ai_gen_id }} svg {
    width: 20px;
    height: 20px;
  }

  {% unless block.settings.show_navigation %}
    .ai-slideshow-nav-{{ ai_gen_id }} {
      display: none;
    }
  {% endunless %}

  {% unless block.settings.show_dots %}
    .ai-slideshow-controls-{{ ai_gen_id }} {
      display: none;
    }
  {% endunless %}

  @media screen and (max-width: 749px) {
    .ai-slideshow-container-{{ ai_gen_id }} {
      height: {{ block.settings.slideshow_height | times: 0.7 }}px;
    }
  }
{% endstyle %}

<slideshow-{{ ai_gen_id }}
  class="ai-slideshow-container-{{ ai_gen_id }}"
  data-autoplay="{{ block.settings.autoplay }}"
  data-interval="{{ block.settings.autoplay_interval }}"
  {{ block.shopify_attributes }}
>
  {% assign has_images = false %}
  {% for i in (1..5) %}
    {% assign image_key = 'image_' | append: i %}
    {% if block.settings[image_key] != blank %}
      {% assign has_images = true %}
      {% break %}
    {% endif %}
  {% endfor %}

  {% if has_images %}
    {% for i in (1..5) %}
      {% assign image_key = 'image_' | append: i %}
      {% if block.settings[image_key] != blank %}
        <div class="ai-slideshow-slide-{{ ai_gen_id }}{% if forloop.first %} active{% endif %}" data-slide="{{ forloop.index0 }}">
          <img
            src="{{ block.settings[image_key] | image_url: width: 2000 }}"
            alt="{{ block.settings[image_key].alt | escape }}"
            loading="{% if forloop.first %}eager{% else %}lazy{% endif %}"
            width="{{ block.settings[image_key].width }}"
            height="{{ block.settings[image_key].height }}"
          >
        </div>
      {% endif %}
    {% endfor %}

    {% if block.settings.show_navigation %}
      <button class="ai-slideshow-nav-{{ ai_gen_id }} ai-slideshow-nav-prev-{{ ai_gen_id }}" aria-label="Previous slide">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <polyline points="15,18 9,12 15,6"></polyline>
        </svg>
      </button>
      <button class="ai-slideshow-nav-{{ ai_gen_id }} ai-slideshow-nav-next-{{ ai_gen_id }}" aria-label="Next slide">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <polyline points="9,18 15,12 9,6"></polyline>
        </svg>
      </button>
    {% endif %}

    {% if block.settings.show_dots %}
      <div class="ai-slideshow-controls-{{ ai_gen_id }}">
        {% for i in (1..5) %}
          {% assign image_key = 'image_' | append: i %}
          {% if block.settings[image_key] != blank %}
            <button class="ai-slideshow-dot-{{ ai_gen_id }}{% if forloop.first %} active{% endif %}" data-slide="{{ forloop.index0 }}" aria-label="Go to slide {{ forloop.index }}"></button>
          {% endif %}
        {% endfor %}
      </div>
    {% endif %}
  {% else %}
    <div class="ai-slideshow-placeholder-{{ ai_gen_id }}">
      {{ 'image' | placeholder_svg_tag }}
      <div class="ai-slideshow-empty-state-{{ ai_gen_id }}">
        Add images to create your slideshow
      </div>
    </div>
  {% endif %}
</slideshow-{{ ai_gen_id }}>

<script>
  (function() {
    class Slideshow{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentSlide = 0;
        this.slides = [];
        this.dots = [];
        this.autoplayTimer = null;
      }

      connectedCallback() {
        this.slides = this.querySelectorAll('.ai-slideshow-slide-{{ ai_gen_id }}');
        this.dots = this.querySelectorAll('.ai-slideshow-dot-{{ ai_gen_id }}');
        this.prevButton = this.querySelector('.ai-slideshow-nav-prev-{{ ai_gen_id }}');
        this.nextButton = this.querySelector('.ai-slideshow-nav-next-{{ ai_gen_id }}');
        
        this.autoplay = this.dataset.autoplay === 'true';
        this.interval = parseInt(this.dataset.interval) * 1000;

        if (this.slides.length > 0) {
          this.setupEventListeners();
          if (this.autoplay) {
            this.startAutoplay();
          }
        }
      }

      disconnectedCallback() {
        this.stopAutoplay();
      }

      setupEventListeners() {
        if (this.prevButton) {
          this.prevButton.addEventListener('click', () => this.previousSlide());
        }
        
        if (this.nextButton) {
          this.nextButton.addEventListener('click', () => this.nextSlide());
        }

        this.dots.forEach((dot, index) => {
          dot.addEventListener('click', () => this.goToSlide(index));
        });

        this.addEventListener('mouseenter', () => this.stopAutoplay());
        this.addEventListener('mouseleave', () => {
          if (this.autoplay) {
            this.startAutoplay();
          }
        });
      }

      goToSlide(index) {
        this.slides[this.currentSlide].classList.remove('active');
        if (this.dots[this.currentSlide]) {
          this.dots[this.currentSlide].classList.remove('active');
        }

        this.currentSlide = index;

        this.slides[this.currentSlide].classList.add('active');
        if (this.dots[this.currentSlide]) {
          this.dots[this.currentSlide].classList.add('active');
        }
      }

      nextSlide() {
        const nextIndex = (this.currentSlide + 1) % this.slides.length;
        this.goToSlide(nextIndex);
      }

      previousSlide() {
        const prevIndex = (this.currentSlide - 1 + this.slides.length) % this.slides.length;
        this.goToSlide(prevIndex);
      }

      startAutoplay() {
        if (this.slides.length <= 1) return;
        
        this.stopAutoplay();
        this.autoplayTimer = setInterval(() => {
          this.nextSlide();
        }, this.interval);
      }

      stopAutoplay() {
        if (this.autoplayTimer) {
          clearInterval(this.autoplayTimer);
          this.autoplayTimer = null;
        }
      }
    }

    customElements.define('slideshow-{{ ai_gen_id }}', Slideshow{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Image slideshow",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Images"
    },
    {
      "type": "image_picker",
      "id": "image_1",
      "label": "Image 1"
    },
    {
      "type": "image_picker",
      "id": "image_2",
      "label": "Image 2"
    },
    {
      "type": "image_picker",
      "id": "image_3",
      "label": "Image 3"
    },
    {
      "type": "image_picker",
      "id": "image_4",
      "label": "Image 4"
    },
    {
      "type": "image_picker",
      "id": "image_5",
      "label": "Image 5"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "slideshow_height",
      "min": 200,
      "max": 800,
      "step": 50,
      "unit": "px",
      "label": "Height",
      "default": 400
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 0
    },
    {
      "type": "header",
      "content": "Animation"
    },
    {
      "type": "range",
      "id": "fade_duration",
      "min": 0.5,
      "max": 3,
      "step": 0.5,
      "unit": "s",
      "label": "Fade duration",
      "default": 1
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Auto-play slides",
      "default": true
    },
    {
      "type": "range",
      "id": "autoplay_interval",
      "min": 2,
      "max": 10,
      "step": 1,
      "unit": "s",
      "label": "Auto-play interval",
      "default": 5
    },
    {
      "type": "header",
      "content": "Navigation"
    },
    {
      "type": "checkbox",
      "id": "show_navigation",
      "label": "Show arrow navigation",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_dots",
      "label": "Show dot indicators",
      "default": true
    },
    {
      "type": "color",
      "id": "dot_active_color",
      "label": "Active dot color",
      "default": "#ffffff"
    }
  ],
  "presets": [
    {
      "name": "Image slideshow"
    }
  ]
}
{% endschema %}